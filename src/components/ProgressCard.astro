---
import { Image } from 'astro:assets';
import { formatDistance, formatDollars } from '../util/format';
import Card from './Card';
import ButtonLink from './ButtonLink';
// import { sanityClient } from "sanity:client";

interface Props {
	title: string;
	icon: {
        src: string;
        alt: string;
    };
    href: string;
    cta: string;
    color: string; 
    progress: {
        current: number;
        total: number;
        unit: string;
    };
    children: any;
}

const { href, title, icon, cta, color, progress } = Astro.props;

// const progress = await sanityClient.fetch(`*[_type == "progress"`);

const formatter = progress.unit === 'CAD' ? formatDollars : formatDistance;

const formattedProgress = `${formatter(progress.current)} / ${formatter(progress.total)}`;

---

<Card>
<section class="progress-card" style={`--card-color: ${color}; --progress: ${progress.current / progress.total * 100}`}>
        <header>
            <h2 class="title">{title}</h2>
            <a href={href} target="_blank" rel="noopener noreferrer">
                <Image class="icon" src={icon.src} alt={icon.alt} inferSize />
            </a>
        </header>
        <slot />
        <div class="progress">
            <p class="progress-label">{formattedProgress}</p>
            <div class="progress-bar">
                <div class="progress-bar--inner"></div>
            </div>
        </div>
        <ButtonLink href={href} external color={color} textColor='#fff'>
            {cta}
        </ButtonLink>
    </section>
</Card>
<style>
	.progress-card {
		display: grid;
        gap: 1rem;
        color: #000;

        header {
            display: flex;
            gap: 0.5rem;
            justify-content: space-between;
            align-items: start;
        }

        .icon {
            width: 50px;
            margin-top: -1rem;
        }
	}

   
	.progress-card > a {
		text-decoration: none;
		line-height: 1.4;
        font-size: 0.8rem;
		padding: 1.5em;
		border-radius: 0.25rem;
		color: white;
        text-transform: uppercase;
        font-weight: 600;
        text-align: center;
		background-color: var(--card-color, #222);
	}

	.title {
		text-align: left;
		font-size: 0.8rem;
		margin: 0;
		text-transform: uppercase;
		font-style: normal;
		position: relative;
		line-height: 1;

		&::before {
			position: relative;
			float: left;
			content: '';
			margin-right: 0.5rem;
			display: block;
			background-color: rgb(var(--accent));
			height: 1lh;
			width: 0.5rem;
			border-radius: 2px;
		}
	}
	p {
		margin: 0;
	}

    .progress {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .progress-label {
        font-size: 0.8rem;
        font-weight: 600;
    }

    .progress-bar {
        height: 5px;
        background-color: #0002;
        border-radius: 5px;
    }

    .progress-bar--inner {
        height: 100%;
        width: calc(var(--progress) * 1%);
        background-color: var(--card-color, #222);
        border-radius: inherit;
    }
</style>